{
	"Parameters" : {
          
	    "InstanceType" : {
	      "Description" : "Combined control node instance type",
	      "Type" : "String",
	      "Default" : "t2.micro",
	      "AllowedValues" : [ "t2.micro"],
	      "ConstraintDescription" : "must be a valid EC2 instance type."
	    },

	    "SshKeyName": {
	   		"Description": "Pre-defined name of SSH key/pair to use to SSH into control node",
	      	"Type": "String",
	      	"Default": "UnsetSshKeyName"
	    },

	    "CoreDbApiUser": {
	   		"Description": "Name of the PostgreSQL user for the API component",
	      	"Type": "String",
	      	"Default": "api87Rb"
	    },

	    "CoreDbApiPassword": {
	   		"Description": "Password for the PostgreSQL user for the API component",
	      	"Type": "String",
	      	"Default": "vedfv8LAA221"
	    },

	    "CoreDbAdminPassword": {
	   		"Description": "Adminstrator (not root) password for the core PostgreSQL database",
	      	"Type": "String",
	      	"Default": "csdc8plq01vbr"
	    },

	    "CoreDatabaseName": {
	   		"Description": "The schema/database name to use for the core PostgreSQL database",
	      	"Type": "String",
	      	"Default": "core87rb"
	    },

	    "SourceStorageS3BucketId": {
	    	"Description": "The ID of the S3 bucket into which 87Rb source code will be uploaded",
	    	"Type": "String"
	    },

	    "SourceStorageS3BucketUri": {
	    	"Description": "The base URI of the S3 source storage bucket",
	    	"Type": "String"
	    },

	    "87RbVersion": {
	    	"Description": "The version of 87Rb that will be deployed",
	    	"Type": "String"
	    },

	    "GoPath" : {
	      "Description" : "Base folder for components written in Go",
	      "Type" : "String",
	      "Default" : "/home/87rb/go"
	    },

	    "Install87RbFolder" : {
	      "Description" : "Install directory for uploaded source files",
	      "Type" : "String",
	      "Default" : "/home/87rb/go/src/github.com/wolferton/87rb"
	    },

	    "87RbHomeFolder": {
	    	"Description": "The home folder for the 87rb user",
	    	"Type": "String",
	    	"Default" : "/home/87rb"
	    }
  	},

  	"Conditions" : {
		"AllowSsh" : {
			"Fn::Not" : [{
	     		"Fn::Equals" : [{"Ref" : "SshKeyName"}, "UnsetSshKeyName"]
	   }]
	  }
	},
  
  	"Mappings" : {
	     "AWSRegionToAMI": {
	      	"eu-central-1": {"ami": "ami-d22932be"},
	      	"eu-west-1": {"ami": "ami-e1398992"}
	    }
  	},

	"Resources": {
		"87RbCombinedControlNodeIamRole":{
			"Type":"AWS::IAM::Role",
			"Properties":{
				"AssumeRolePolicyDocument":{
					"Statement":[
						{
							"Effect":"Allow",
							"Principal":{
								"Service":[ "ec2.amazonaws.com" ]
							},
							"Action":[ "sts:AssumeRole" ]
						}
					]
				},
			"Path":"/"
			}
		},
		"87RbCombinedControlNodeIamRolePolicies":{
			"Type":"AWS::IAM::Policy",
			"Properties":{
				"PolicyName":"S3Download",
				"PolicyDocument":{
					"Statement":[
						{
							"Action":[ "s3:GetObject" ],
							"Effect":"Allow",
							"Resource": {"Fn::Join" : [ "", [ "arn:aws:s3:::", {"Ref": "SourceStorageS3BucketId"}, "/*"] ]}
						}
					]
				},
				"Roles":[ {"Ref":"87RbCombinedControlNodeIamRole"} ]
			}
		},
		"87RbCombinedControlNodeIamInstanceProfile":{
			"Type":"AWS::IAM::InstanceProfile",
			"Properties":{
				"Path":"/",
				"Roles":[
				{
					"Ref":"87RbCombinedControlNodeIamRole"
				}
				]
			}
		},

		"87RbCombinedControlNode": {
			"Type": "AWS::EC2::Instance",
			"Metadata": {
				"AWS::CloudFormation::Authentication": {
					"SourceBucketS3AccessCreds": {
						"type": "S3",
						"roleName": { "Ref" : "87RbCombinedControlNodeIamRole"},
						"buckets" : [ {"Ref": "SourceStorageS3BucketId"} ]
					}
				},
				"AWS::CloudFormation::Init" : {
					"config" : {
						"services": {
							"sysvinit" : {
							    "87rb-trigger" : {
							      "enabled" : "true",
							      "ensureRunning" : "true"
							    },
							    "87rb-api" : {
							      "enabled" : "true",
							      "ensureRunning" : "true"
							    },
							    "87rb-ui" : {
							      "enabled" : "true",
							      "ensureRunning" : "true"
							    },
							    "postgresql94": {
							      "enabled" : "true",
							      "ensureRunning" : "true",
							      "packages" : { "yum" : ["postgresql94-server"] }	
							    }
							}							
						},
						"packages" : {
							"yum" : {
								"golang"               : [],
								"postgresql94-server": []
							}
						},
						"users": {
							"87rb": {
								"homeDir" : "/home/87rb"	
							}
						},
						"files": {
							"/home/87rb/tmp/pg_hba.conf": {
								"owner": "postgres",
								"group": "postgres",
								"mode": "600",
								"source": {"Fn::Join" : [ "", [ {"Ref": "SourceStorageS3BucketUri"}, "/", {"Ref": "87RbVersion"}, "/templates/pg_hba.conf" ] ]},
								"context": {
									"DbAdminUser": "admin87rb",
									"DatabaseName": { "Ref": "CoreDatabaseName"},
									"DbApiUser":  { "Ref": "CoreDbApiUser"}
								}
							},
							"/home/87rb/schema/87rb-core.sql": {
								"owner": "87rb",
								"group": "87rb",
								"source": {"Fn::Join" : [ "", [ {"Ref": "SourceStorageS3BucketUri"}, "/", {"Ref": "87RbVersion"}, "/schema/87rb-core.sql" ] ]},
								"authentication" : "SourceBucketS3AccessCreds"
							},
							"/home/87rb/src/87rb-api.tar.gz": {
								"owner": "87rb",
								"group": "87rb",
								"source": {"Fn::Join" : [ "", [ {"Ref": "SourceStorageS3BucketUri"}, "/", {"Ref": "87RbVersion"}, "/src/87rb-api.tar.gz" ] ]},
								"authentication" : "SourceBucketS3AccessCreds"
							},
							"/home/87rb/src/87rb-ui.tar.gz": {
								"owner": "87rb",
								"group": "87rb",
								"source": {"Fn::Join" : [ "", [ {"Ref": "SourceStorageS3BucketUri"}, "/", {"Ref": "87RbVersion"}, "/src/87rb-ui.tar.gz" ] ]},
								"authentication" : "SourceBucketS3AccessCreds"
							},
							"/home/87rb/src/87rb-trigger.tar.gz": {
								"owner": "87rb",
								"group": "87rb",
								"source": {"Fn::Join" : [ "", [ {"Ref": "SourceStorageS3BucketUri"}, "/", {"Ref": "87RbVersion"}, "/src/87rb-trigger.tar.gz" ] ]},
								"authentication" : "SourceBucketS3AccessCreds"
							},
							"/home/87rb/bin/build.sh": {
								"owner": "87rb",
								"group": "87rb",
								"mode": "744",
								"source": {"Fn::Join" : [ "", [ {"Ref": "SourceStorageS3BucketUri"}, "/", {"Ref": "87RbVersion"}, "/templates/build.sh" ] ]},
								"context": {
									"GoPath": {"Ref": "GoPath"},
									"InstallHome": { "Ref": "Install87RbFolder"},
									"SourceHome": {"Fn::Join" : [ "", [ {"Ref": "87RbHomeFolder"}, "/src"] ]}	
								}
							},
							"/home/87rb/bin/init-core-db.sh": {
								"owner": "87rb",
								"group": "87rb",
								"mode": "755",
								"source": {"Fn::Join" : [ "", [ {"Ref": "SourceStorageS3BucketUri"}, "/", {"Ref": "87RbVersion"}, "/templates/init-core-db.sh" ] ]},
								"context": {
									"DbAdminUser": "admin87rb",
									"DbAdminPassword": { "Ref": "CoreDbAdminPassword"},
									"DbApiUser":  { "Ref": "CoreDbApiUser"},
									"DbApiPassword": { "Ref": "CoreDbApiPassword"},
									"DatabaseName": { "Ref": "CoreDatabaseName"},
									"SchemaFile": {"Fn::Join" : [ "", [ {"Ref": "87RbHomeFolder"}, "/schema/87rb-core.sql"] ]}
								}
							},
							"/etc/init.d/87rb-trigger": {
								"mode": "755",
								"source": {"Fn::Join" : [ "", [ {"Ref": "SourceStorageS3BucketUri"}, "/", {"Ref": "87RbVersion"}, "/templates/init.d" ] ]},
								"context": {
									"GoPath": {"Ref": "GoPath"},
									"Component": "87rb-trigger",
									"ComponentHome": {"Fn::Join" : [ "", [ {"Ref": "Install87RbFolder"}, "/87rb-trigger"] ]},
									"StdOutLog": "/var/log/87rb/87rb-trigger-stdout",
									"StdErrLog": "/var/log/87rb/87rb-trigger-stderr",
									"User": "87rb"	
								}
							},
							"/etc/init.d/87rb-api": {
								"mode": "755",
								"source": {"Fn::Join" : [ "", [ {"Ref": "SourceStorageS3BucketUri"}, "/", {"Ref": "87RbVersion"}, "/templates/init.d" ] ]},
								"context": {
									"GoPath": {"Ref": "GoPath"},
									"Component": "87rb-api",
									"ComponentHome": {"Fn::Join" : [ "", [ {"Ref": "Install87RbFolder"}, "/87rb-api"] ]},
									"StdOutLog": "/var/log/87rb/87rb-api-stdout",
									"StdErrLog": "/var/log/87rb/87rb-api-stderr",
									"User": "87rb"	
								}
							},
							"/etc/init.d/87rb-ui": {
								"mode": "755",
								"source": {"Fn::Join" : [ "", [ {"Ref": "SourceStorageS3BucketUri"}, "/", {"Ref": "87RbVersion"}, "/templates/init.d" ] ]},
								"context": {
									"GoPath": {"Ref": "GoPath"},
									"Component": "87rb-ui",
									"ComponentHome": {"Fn::Join" : [ "", [ {"Ref": "Install87RbFolder"}, "/87rb-ui"] ]},
									"StdOutLog": "/var/log/87rb/87rb-ui-stdout",
									"StdErrLog": "/var/log/87rb/87rb-ui-stderr",
									"User": "87rb"	
								}
							}
						},
						"commands":{
							"build":{
								"command" : "/home/87rb/bin/build.sh > /tmp/build.out"
							},
							"initialiseDb":{
								"command": "service postgresql94 initdb && mv /home/87rb/tmp/pg_hba.conf /var/lib/pgsql94/data/pg_hba.conf && service postgresql94 start"
							},
							"logFolders":{
								"command" : "mkdir /var/log/87rb && chown 87rb:87rb /var/log/87rb"
							},
							"startServices":{
								"command": "/etc/init.d/87rb-trigger start && /etc/init.d/87rb-api start && /etc/init.d/87rb-ui start"
							},
							"readySchema":{
								"command": "sudo -u postgres /home/87rb/bin/init-core-db.sh"
							},
							"xitCleanup":{
								"command": "rm -rf /home/87rb/tmp && rm -f /home/87rb/bin/init-core-db.sh"
							}
						}
					}
				}
			},
			"Properties": {
				"IamInstanceProfile":{
					"Ref":"87RbCombinedControlNodeIamInstanceProfile"
				},
				"SecurityGroups" : [ { "Ref" : "87RbCombinedControlNodeSG" } ],
				"ImageId" : { "Fn::FindInMap" : [ "AWSRegionToAMI", { "Ref" : "AWS::Region" }, "ami"] },
        		"InstanceType"   : { "Ref" : "InstanceType" },
        		"KeyName" : {
			      "Fn::If" : [
			        "AllowSsh",
			        {"Ref" : "SshKeyName"},
			        {"Ref" : "AWS::NoValue"}
			      ]
			    },
				"UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
		             "#!/bin/bash -xe\n",
		             "yum update -y aws-cfn-bootstrap\n",
		             "# Install the files and packages from the metadata\n",
		             "/opt/aws/bin/cfn-init -v ",
		             "         --stack ", { "Ref" : "AWS::StackName" },
		             "         --resource 87RbCombinedControlNode ",
		             "         --region ", { "Ref" : "AWS::Region" }, "\n"
					]]}}
			}
		},

		

		"87RbCombinedControlNodeSG" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Combined control node (SSH-admin enabled)"
			}
		},

		"87RbSshInbound": {
			"Type": "AWS::EC2::SecurityGroupIngress",
			"Condition": "AllowSsh",
            "Properties": {
				"IpProtocol" : "tcp",
				"FromPort" : "22",
				"ToPort" : "22",
				"CidrIp" : "0.0.0.0/0",
				"GroupId": {
		          "Fn::GetAtt": [
		            "87RbCombinedControlNodeSG",
		            "GroupId"
		          ]
		        }
			}
		} 

	},

	"Outputs" : {
		"AdminUiUrl" : {
			"Description" : "87Rb UI",
			"Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "87RbCombinedControlNode", "PublicDnsName" ]}]] }
		},
		"CombinedControlNodePublicDomain": {
			"Description": "Domain name for combined control node",
			"Value": {"Fn::GetAtt" : [ "87RbCombinedControlNode", "PublicDnsName" ]}
		},
		"Version": {
			"Description": "Deployed version of 87Rb",
			"Value": {"Ref": "87RbVersion"}
		}
	}
}